{
  "title": "CMS Stress",
  "subtitle": "The journey to Gin (part 1)",
  "slug": "cms-stress",
  "section": "gincms",
  "url": "/gincms/cms-stress/",
  "body": "> Wait...what? Where's the directory I was just..? Oh, *shit*. I didn't. I couldn't have.... *Fuck*. I did. OK. Think. Backups? I keep everything under version control but...not the content. Did I make a copy of the content directory as recommended? *No*. Why would I? I've performed hundreds—if not *thousands*—of similar operations and not lost anything. Until *now*. \r\n\r\n> OK, what else? *Think*. Cron job: automated backups of the DB. *Crap*. I didn't get around to setting that up. I was more concerned with the code. OK. How do you recover files deleted with `rm`? Maybe if that sector of the disk hasn't been overwritten, I can recover the directory I deleted...\r\n\r\n---\r\n\r\n### Oh my word!\r\n\r\nIn December of 2015 I had an idea for a tool that would allow me to catalogue my favourite words. I knocked together a Chrome extension in an afternoon and was pleased with the return on investment. It was basic, but effective. About a month later, the extension supported multiple users and had an accompanying mobile app and a [website](https://ohmyword.xyz).\r\n\r\nThe main site was actually a purpose-built Node application, and the [blog](https://ohmyword.xyz/inspiration/) *was* powered by [Ghost](https://tryghost.com).\r\n\r\n### Ghost\r\n\r\nI'd been aware of Ghost since the Kickstarter campaign. I started using it as soon as it became available. Even with its limited feature set, I was immediately a fan. It felt refreshing, after spending so much time with Wordpress. Besides the excellent decision to provide a Markdown editor, it felt lighter, faster and less cluttered than the dreaded *'press*.\r\n\r\n### Wordpress\r\n\r\nWhen I first discovered Wordpress, I'll admit, I was somewhat enamoured. At the time, I was coming from *Joomla*, and even though I was already a PHP developer by that point, I just couldn't get into it.\r\n\r\nWordpress, however, was *easy* to get into. It had a relatively user-friendly interface, a vast number of plugins and themes available, plenty of documentation and was incredibly easy to extend it, if you had even a modicum of know-how. Even though it was originally just a blogging platform (wait, that's not the *Wordpress* tagline...), you could—and still can—build practically any kind of website with it. Of course, because they could, people did: blogs, portfolios, e-commerce sites, web applications and APIs. You name it, people built it. With Wordpress. As a result of its popularity I spent years working with it, both professionally and in my spare time, but never more intensely than while working on the [Rough Guides](https://www.roughguides.com) website. This was where I fell out of love with Wordpress. \r\n\r\nRough Guides used a mix of third-party, in-house and hybrid (modified third-party) plugins. There were over *sixty active plugins* when I started working on it, and that number only grew. It also had significant amounts of custom functionality that wasn't in plugins; the *functions.php* file was a *monster*. It *was not* the average Wordpress installation.My frustrations increased as I had to go various code-dives into both plugins and core code to understand various slowdowns we were experiencing. Like the time the\r\n\r\nFor the average user, the\r\nThe site has thousands of posts\r\n\r\nThe site gets millions of visitors every month.\r\n\r\n",
  "featured-image": {
    "src": ""
  },
  "summary": "",
  "blog": "1",
  "created": "2017-05-07T19:36:39.172Z",
  "updated": "2017-07-24T06:17:08.184Z",
  "published": "",
  "contentType": "page",
  "id": "HJ18wlaJW"
}