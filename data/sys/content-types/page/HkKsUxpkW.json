{
  "title": "Gin",
  "subtitle": "A distributed, Git-integrated CMS",
  "slug": "index",
  "section": "gincms",
  "url": "/gincms/",
  "body": "I needed a CMS that allowed me to work offline. I wanted something that felt lightweight, produced content that could be deployed anywhere, but still had some of the niceties of traditional content management systems. Most importantly, I wanted _everything_ to be undoable.\r\n\r\nI couldn't find a CMS that provided all of the above. So I built one. It's called ***Gin***.\r\n\r\n## Rewind\r\n\r\nIf you've ever lost data, whether due to a technical failure or human error, you know how painful it can be. I suffered an *almost* catastrophic loss myself, due to my own mistake (read: complacency).\r\n\r\nGin is designed to protect _everything_, from code to content. How? By bringing to content creation something that has been part of development process for years â€” **version control**.\r\n\r\nGin is built on the most used and most loved version control system there is: **[Git](https://git-scm.com)**.  Not only that, but the content is stored securely in the most popular platform for hosting Git repositories: **[GitHub](https://github.com)**.\r\n\r\nBecause *true* version control is baked right in to Gin, *all* changes can be undone. *Any* mistake can be rectified, whether it's a system or content error. Your entire project is under version control from the point of creation. Even *deletions* are recoverable. No more loss. Just press *rewind*.\r\n\r\n## Work offline\r\n\r\nThere are only a few actions in Gin that require an internet connection: login, project creation and synchronisation. *All* other operations work offline. You can even preview your content, as it will appear once it's published. *Yes*. You can preview it. *Offline*.\r\n\r\n### Login\r\n\r\nGin uses GitHub for authentication. If you have a GitHub account, you're already all set to start using Gin. You'll only need to login once. This will allow Gin to perform actions on your behalf on the repository it creates for you (and any other Gin projects on which you collaborate).\r\n\r\n### Projects\r\n\r\nAs mentioned above, when a project is created in Gin, it automatically creates a repository on GitHub. Whenever you save changes while using Gin on your computer, they're actually being saved to your local copy of the Git repository. In order to fully protect your content, you have to push your local changes back to the remote GitHub repository.\r\n\r\n### Synchronisation\r\n\r\nCreate, edit and delete to your heart's content. You'll be able to rewind any change you've made locally. Then, whenever you're ready to push your changes to the cloud, just hit *Sync*. Anyone who is collaborating with you on your project will receive the changes when they too *sync*. They'll also gain the ability to rewind rewind any of your changes.\r\n\r\n## Proof of concept\r\n\r\n*Gin* is in the early stages of development; I often refer to it as a *prototype* or *proof of concept*. However, none of the above is conceptual. The old content (what used to be *Death by Wordpress*) was ported from Ghost to Gin, to live on as part of [Prickly Dev](/ \"Prickly Dev\"). The most recent posts were all created and published using Gin.\r\n\r\nIf you like the idea, want to know more, or are interested in getting involved, get in touch via [@LatnBlack](https://twitter.com/LatnBlack).",
  "featured-image": {
    "src": ""
  },
  "summary": "",
  "blog": "1",
  "created": "2017-05-07T19:33:52.647Z",
  "updated": "2017-05-08T22:22:35.118Z",
  "published": "",
  "contentType": "page",
  "id": "HkKsUxpkW"
}