{
  "title": "Why another CMS?",
  "subtitle": "",
  "slug": "why-another-cms",
  "section": "gincms",
  "url": "/gincms/why-another-cms/",
  "body": "On Wednesday, 22nd of February, 2017, I attended Hacks/Hackers in London. That evening I heard Matt Kiser, the founder of [WTFJHT](1), speaking about the creation of his site, the tools and services he uses, and how he made it a collaborative/community aspect of the site works. In the process, he vindicated an idea that had been tumbling around in my mind for some time: code and content can share the same workflow.\r\n\r\n### Teams\r\n\r\nWhen working in a team, people are usually working on different parts of the product, so one person's work won't necessarily have an impact on another's. But even when there is overlap, consistent updates and communication among team members can mitigate any major conflicts. This is fairly universal. Yet, there are fundamental differences between development and content teams when it comes to the ways they work, and I think it mainly comes down to the tools that are available.\r\n\r\n### Tools\r\n\r\nSpeak to pretty much any developer, even the least experienced, and they've almost certainly heard of version control. I've never come across a developer that *doesn't* know what a VCS is (although I'm sure there's one out there somewhere, as do those who just flat out *refuse* to adopt any form of version control—yes, they exist too). In contrast, I've found that the typical content creator has a very limited—if any—idea of version control. At best, they have a concept of *history* or *versions*, as found in software like Wordpress, Microsoft Word, or Google Docs, if they're so savvy.\r\n\r\n### Undervalued\r\n\r\nIt's not difficult to understand why the average content creator has no idea about version control. In development it's standard practice to use a VCS of some kind: it protects both the temporal and monetary investment, as developers (and, therefore, their work) can be quite expensive. Imagine all that hard work was suddenly erased because somebody accidentally deleted the wrong directory?\r\n\r\nBut what about the value of the content and those who write it? It should be plain as day. Websites and applications alike are dependent to some degree on their content, *not just code*. Blog posts, marketing material, documentation, and general information all play vital roles, and yet the content often lacks the same level of protection as code.\r\n\r\n### Out of control\r\n\r\nOf course, the role of content varies, depending on where and how it's being used, and that affects its value. But isn't this also true of code? Yet even the most trivial feature, plugin, addon or script will be placed under version control by any reasonable developer. Often one of the first thoughts for a developer when working on new code: create a repository and get it under version control. In the world of content creation, however, version control is at best an afterthought, and at worst relegated to oblivion by ignorance. And the risk doesn't become apparent until things go wrong.\r\n\r\n[1]:http://whatthefuckjusthappenedtoday.com",
  "featured-image": {
    "src": ""
  },
  "summary": "",
  "blog": "1",
  "created": "2017-05-10T07:43:55.179Z",
  "updated": "2017-05-10T13:23:18.920Z",
  "published": "",
  "contentType": "page",
  "id": "SyXaNregb"
}